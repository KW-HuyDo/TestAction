# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    branches: [ main ]
    types: [closed]


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          zip README.zip README.md
      - name: Set current date as env variable
        run: |
          NOW=$(date +'v.%Y-%m-%dT%H-%M-%S')
          echo "NOW=$NOW" >> $GITHUB_ENV
      - name: Echo current date
        run: echo $NOW
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ env.NOW }}
          release_name: ${{ github.event.release.tag_name }}
          body: | # use the body
            ${{ steps.commit.outputs.body}}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: README.zip
          asset_name: README.zip
          asset_content_type: application/zip

      - name: "Test log"
        run: |
          echo "${{github.event.pull_request.body}}"
          TEST_LOG=${{github.event.pull_request.body}}
#          TEST_LOG=$(git log -1 --pretty=format:"%s")
#          echo "TEST_LOG=$TEST_LOG" >> $GITHUB_ENV
#          echo $TEST_LOG
#          echo "${{ github.event.head_commit.message }}"
